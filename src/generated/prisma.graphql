# source: http://localhost:4466
# timestamp: Wed May 16 2018 16:20:15 GMT+0200 (CEST)

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteUser(where: UserWhereUniqueInput!): User
  upsertUser(
    where: UserWhereUniqueInput!
    create: UserCreateInput!
    update: UserUpdateInput!
  ): User!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  user(where: UserWhereUniqueInput!): User
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): UserConnection!

  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User implements Node {
  id: ID!
  email: String!
  password: String!
  name: String!
  inviteToken: String
  inviteAccepted: Boolean!
  emailConfirmed: Boolean!
  emailConfirmToken: String
  resetToken: String
  resetExpires: DateTime
  deletedAt: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  isSuper: Boolean!
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  email: String!
  password: String!
  name: String!
  inviteToken: String
  inviteAccepted: Boolean
  emailConfirmed: Boolean
  emailConfirmToken: String
  resetToken: String
  resetExpires: DateTime
  deletedAt: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  isSuper: Boolean
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
  inviteToken_ASC
  inviteToken_DESC
  inviteAccepted_ASC
  inviteAccepted_DESC
  emailConfirmed_ASC
  emailConfirmed_DESC
  emailConfirmToken_ASC
  emailConfirmToken_DESC
  resetToken_ASC
  resetToken_DESC
  resetExpires_ASC
  resetExpires_DESC
  deletedAt_ASC
  deletedAt_DESC
  lastLogin_ASC
  lastLogin_DESC
  joinedAt_ASC
  joinedAt_DESC
  isSuper_ASC
  isSuper_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  name: String!
  inviteToken: String
  inviteAccepted: Boolean!
  emailConfirmed: Boolean!
  emailConfirmToken: String
  resetToken: String
  resetExpires: DateTime
  deletedAt: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  isSuper: Boolean!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  inviteToken: String
  inviteAccepted: Boolean
  emailConfirmed: Boolean
  emailConfirmToken: String
  resetToken: String
  resetExpires: DateTime
  deletedAt: DateTime
  lastLogin: DateTime
  joinedAt: DateTime
  isSuper: Boolean
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  password: String

  """
  All values that are not equal to given value.
  """
  password_not: String

  """
  All values that are contained in given list.
  """
  password_in: [String!]

  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]

  """
  All values less than the given value.
  """
  password_lt: String

  """
  All values less than or equal the given value.
  """
  password_lte: String

  """
  All values greater than the given value.
  """
  password_gt: String

  """
  All values greater than or equal the given value.
  """
  password_gte: String

  """
  All values containing the given string.
  """
  password_contains: String

  """
  All values not containing the given string.
  """
  password_not_contains: String

  """
  All values starting with the given string.
  """
  password_starts_with: String

  """
  All values not starting with the given string.
  """
  password_not_starts_with: String

  """
  All values ending with the given string.
  """
  password_ends_with: String

  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  inviteToken: String

  """
  All values that are not equal to given value.
  """
  inviteToken_not: String

  """
  All values that are contained in given list.
  """
  inviteToken_in: [String!]

  """
  All values that are not contained in given list.
  """
  inviteToken_not_in: [String!]

  """
  All values less than the given value.
  """
  inviteToken_lt: String

  """
  All values less than or equal the given value.
  """
  inviteToken_lte: String

  """
  All values greater than the given value.
  """
  inviteToken_gt: String

  """
  All values greater than or equal the given value.
  """
  inviteToken_gte: String

  """
  All values containing the given string.
  """
  inviteToken_contains: String

  """
  All values not containing the given string.
  """
  inviteToken_not_contains: String

  """
  All values starting with the given string.
  """
  inviteToken_starts_with: String

  """
  All values not starting with the given string.
  """
  inviteToken_not_starts_with: String

  """
  All values ending with the given string.
  """
  inviteToken_ends_with: String

  """
  All values not ending with the given string.
  """
  inviteToken_not_ends_with: String
  inviteAccepted: Boolean

  """
  All values that are not equal to given value.
  """
  inviteAccepted_not: Boolean
  emailConfirmed: Boolean

  """
  All values that are not equal to given value.
  """
  emailConfirmed_not: Boolean
  emailConfirmToken: String

  """
  All values that are not equal to given value.
  """
  emailConfirmToken_not: String

  """
  All values that are contained in given list.
  """
  emailConfirmToken_in: [String!]

  """
  All values that are not contained in given list.
  """
  emailConfirmToken_not_in: [String!]

  """
  All values less than the given value.
  """
  emailConfirmToken_lt: String

  """
  All values less than or equal the given value.
  """
  emailConfirmToken_lte: String

  """
  All values greater than the given value.
  """
  emailConfirmToken_gt: String

  """
  All values greater than or equal the given value.
  """
  emailConfirmToken_gte: String

  """
  All values containing the given string.
  """
  emailConfirmToken_contains: String

  """
  All values not containing the given string.
  """
  emailConfirmToken_not_contains: String

  """
  All values starting with the given string.
  """
  emailConfirmToken_starts_with: String

  """
  All values not starting with the given string.
  """
  emailConfirmToken_not_starts_with: String

  """
  All values ending with the given string.
  """
  emailConfirmToken_ends_with: String

  """
  All values not ending with the given string.
  """
  emailConfirmToken_not_ends_with: String
  resetToken: String

  """
  All values that are not equal to given value.
  """
  resetToken_not: String

  """
  All values that are contained in given list.
  """
  resetToken_in: [String!]

  """
  All values that are not contained in given list.
  """
  resetToken_not_in: [String!]

  """
  All values less than the given value.
  """
  resetToken_lt: String

  """
  All values less than or equal the given value.
  """
  resetToken_lte: String

  """
  All values greater than the given value.
  """
  resetToken_gt: String

  """
  All values greater than or equal the given value.
  """
  resetToken_gte: String

  """
  All values containing the given string.
  """
  resetToken_contains: String

  """
  All values not containing the given string.
  """
  resetToken_not_contains: String

  """
  All values starting with the given string.
  """
  resetToken_starts_with: String

  """
  All values not starting with the given string.
  """
  resetToken_not_starts_with: String

  """
  All values ending with the given string.
  """
  resetToken_ends_with: String

  """
  All values not ending with the given string.
  """
  resetToken_not_ends_with: String
  resetExpires: DateTime

  """
  All values that are not equal to given value.
  """
  resetExpires_not: DateTime

  """
  All values that are contained in given list.
  """
  resetExpires_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  resetExpires_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  resetExpires_lt: DateTime

  """
  All values less than or equal the given value.
  """
  resetExpires_lte: DateTime

  """
  All values greater than the given value.
  """
  resetExpires_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  resetExpires_gte: DateTime
  deletedAt: DateTime

  """
  All values that are not equal to given value.
  """
  deletedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  deletedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  deletedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  deletedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  deletedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  deletedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  deletedAt_gte: DateTime
  lastLogin: DateTime

  """
  All values that are not equal to given value.
  """
  lastLogin_not: DateTime

  """
  All values that are contained in given list.
  """
  lastLogin_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  lastLogin_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  lastLogin_lt: DateTime

  """
  All values less than or equal the given value.
  """
  lastLogin_lte: DateTime

  """
  All values greater than the given value.
  """
  lastLogin_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  lastLogin_gte: DateTime
  joinedAt: DateTime

  """
  All values that are not equal to given value.
  """
  joinedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  joinedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  joinedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  joinedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  joinedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  joinedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  joinedAt_gte: DateTime
  isSuper: Boolean

  """
  All values that are not equal to given value.
  """
  isSuper_not: Boolean
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
